extends ../_docs-template

block vars
  - var activeLink = 'react';
  - var title = 'Stepper React Component | Framework7 React Documentation';

block content
  include ../_docs-demo-device

  .docs-nav
    include ../_docs-menu-react
  .docs-content
    +improveDocsLink
    h1 Stepper React Component
    ul.docs-index
    p Stepper React component represents <a href="../docs/stepper.html">Stepper</a> component.
    h2 Stepper Components
    p There are following components included:
    ul
      li <code><b>Stepper</b></code> / <code><b>F7Stepper</b></code>
    h2 Stepper Properties
    table.params-table
      thead
        tr
          th Prop
          th Type
          th Default
          th Description
      tbody
        tr
          th(colspan="4") &lt;Stepper&gt; properties
        tr
          td init
          td boolean
          td true
          td Initializes Stepper
        tr
          td value
          td number
          td 0
          td Stepper value
        tr
          td min
          td number
          td 0
          td Minimum value
        tr
          td max
          td number
          td 100
          td Maximum value
        tr
          td step
          td number
          td 1
          td Maximum value
        tr
          td wraps
          td boolean
          td false
          td When enabled, incrementing beyond maximum value sets value to minimum value; likewise, decrementing below minimum value sets value to maximum value
        tr
          td autorepeat
          td boolean
          td false
          td When enabled it will repeatedly increase/decrease values while you tap and hold plus/minus buttons
        tr
          td autorepeatDynamic
          td boolean
          td false
          td When enabled it will increase autorepeat ratio based on how long you hold the button
        tr
          td input
          td boolean
          td true
          td Defines should it render <code>&lt;input&gt;</code> element or not
        tr
          td inputReadonly
          td boolean
          td false
          td Makes inner input element <code>readonly</code>
        tr
          td buttonsOnly
          td boolean
          td false
          td Disables inner value container between stepper buttons
        tr
          td formatValue
          td function(value)
          td
          td Custom function to format value for value element between buttons. It must return new formatted value
        tr
          td manualInputMode
          td boolean
          td false
          td Enables manual input mode. This mode allows to type value from keyboar and check fractional part with defined accurancy. Also, <code>step</code> parameter is ignored when typing in this mode.
        tr
          td decimalPoint
          td number
          td 4
          td Number of digits after dot, when in manual input mode.
        tr
          td buttonsEndInputMode
          td boolean
          td true
          td Disables manual input mode on Stepper's minus or plus button click.
        tr
          td disabled
          td boolean
          td false
          td Defines whether the stepper is disabled or not
        tr
          td round
          td boolean
          td false
          td Makes stepper round
        tr
          td roundIos
          td boolean
          td false
          td Makes stepper round for iOS theme only
        tr
          td roundMd
          td boolean
          td false
          td Makes stepper round for MD theme only
        tr
          td big
          td boolean
          td false
          td Makes big stepper
        tr
          td bigIos
          td boolean
          td false
          td Makes big stepper for iOS theme only
        tr
          td bigMd
          td boolean
          td false
          td Makes big stepper for MD theme only
        tr
          td small
          td boolean
          td false
          td Makes small stepper
        tr
          td smallIos
          td boolean
          td false
          td Makes small stepper for iOS theme only
        tr
          td smallMd
          td boolean
          td false
          td Makes small stepper for MD theme only
        tr
          td fill
          td boolean
          td false
          td Makes stepper filled color
        tr
          td fillIos
          td boolean
          td false
          td Makes stepper filled color for iOS theme only
        tr
          td fillMd
          td boolean
          td false
          td Makes stepper filled color for MD theme only
        tr
          td raised
          td boolean
          td false
          td Makes stepper raised. Affects MD theme only
    h2 Stepper Events
    table.events-table
      thead
        tr
          th Event
          th Description
      tbody
        tr
          th(colspan="2") &lt;Stepper&gt; events
        tr
          td stepperChange
          td Event will be triggered when Stepper value has been changed
        tr
          td stepperMinusClick
          td Event will be triggered on "minus" button click
        tr
          td stepperPlusClick
          td Event will be triggered on "plus" button click
        tr
          td input
          td Event will be triggered on input's <code>input</code> event
    h2 Stepper Methods
    table.methods-table
      thead
        tr
          th Event
          th Description
      tbody
        tr
          th(colspan="2") &lt;Stepper&gt; methods
        tr
          td .increment()
          td Increment stepper value, similar to clicking on its "plus" button
        tr
          td .decremenet()
          td Decrement stepper value, similar to clicking on its "minus" button
        tr
          td .setValue(<span>newValue</span>)
          td Set new stepper value
        tr
          td .getValue()
          td Returns stepper value
    .with-device
      h2(data-device-preview="../docs-demos/react/stepper.html") Examples
      :code(lang="jsx")
            export default class extends React.Component {
              constructor(props) {
                super(props);

                this.state = {
                  applesCount: 0,
                  orangesCount: 0,
                  meetingTime: 15,
                };
              }
              get meetingTimeComputed() {
                const self = this;
                const value = self.state.meetingTime;

                const hours = Math.floor(value / 60);
                const minutes = value - (hours * 60);
                const formatted = [];
                if (hours > 0) {
                  formatted.push(hours + ' ' + (hours > 1 ? 'hours' : 'hour'));
                }
                if (minutes > 0) {
                  formatted.push(minutes + ' minutes');
                }
                return formatted.join(' ');
              }
              setApples(value) {
                this.setState({ applesCount: value });
              }
              setOranges(value) {
                this.setState({ orangesCount: value });
              }
              setMeetingTime(value) {
                this.setState({ meetingTime: value });
              }
              render () {
                return (
                  <Page>
                    <Navbar title="Stepper"></Navbar>

                    <BlockTitle>Shape and size</BlockTitle>
                    <Block strong className="text-align-center">
                      <Row>
                        <Col>
                          <small className="display-block">Default</small>
                          <Stepper></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Round</small>
                          <Stepper round></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <small className="display-block">Fill</small>
                          <Stepper fill></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Round Fill</small>
                          <Stepper fill round></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <small className="display-block">Small</small>
                          <Stepper small></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Small Round</small>
                          <Stepper small round></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <small className="display-block">Small Fill</small>
                          <Stepper small fill></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Small Round Fill</small>
                          <Stepper small round fill></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <small className="display-block">Big</small>
                          <Stepper big></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Big Round</small>
                          <Stepper big round></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <small className="display-block">Big Fill</small>
                          <Stepper big fill></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Big Round Fill</small>
                          <Stepper big round fill></Stepper>
                        </Col>
                      </Row>
                    </Block>

                    <BlockTitle>Raised (MD-theme only)</BlockTitle>
                    <Block strong className="text-align-center">
                      <Row>
                        <Col>
                          <small className="display-block">Default</small>
                          <Stepper raised></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Round</small>
                          <Stepper raised round></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <small className="display-block">Fill</small>
                          <Stepper raised fill></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Round Fill</small>
                          <Stepper raised fill round></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <small className="display-block">Small</small>
                          <Stepper raised small></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Small Round</small>
                          <Stepper raised small round></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <small className="display-block">Small Fill</small>
                          <Stepper raised small fill></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Small Round Fill</small>
                          <Stepper raised small round fill></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <small className="display-block">Big</small>
                          <Stepper raised big></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Big Round</small>
                          <Stepper raised big round></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <small className="display-block">Big Fill</small>
                          <Stepper raised big fill></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Big Round Fill</small>
                          <Stepper raised big round fill></Stepper>
                        </Col>
                      </Row>
                    </Block>
                    <BlockTitle>Colors</BlockTitle>
                    <Block strong className="text-align-center">
                      <Row>
                        <Col>
                          <Stepper fill color="red"></Stepper>
                        </Col>
                        <Col>
                          <Stepper fill round color="green"></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <Stepper fill color="blue"></Stepper>
                        </Col>
                        <Col>
                          <Stepper fill round color="pink"></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <Stepper fill small color="yellow"></Stepper>
                        </Col>
                        <Col>
                          <Stepper fill small round color="orange"></Stepper>
                        </Col>
                      </Row>

                      <Row className="margin-top">
                        <Col>
                          <Stepper fill small color="gray"></Stepper>
                        </Col>
                        <Col>
                          <Stepper fill small round color="black"></Stepper>
                        </Col>
                      </Row>
                    </Block>
                    <BlockTitle>Without input element</BlockTitle>
                    <Block strong className="text-align-center">
                      <Row>
                        <Col>
                          <Stepper input={false}></Stepper>
                        </Col>
                        <Col>
                          <Stepper input={false} round></Stepper>
                        </Col>
                      </Row>
                    </Block>
                    <BlockTitle>Min, max, step</BlockTitle>
                    <Block strong className="text-align-center">
                      <Row>
                        <Col>
                          <Stepper value={100} min={0} max={1000} step={100}></Stepper>
                        </Col>
                        <Col>
                          <Stepper input={false} value={5} min={0} max={10} step={0.5}></Stepper>
                        </Col>
                      </Row>
                    </Block>

                    <BlockTitle>Autorepeat (Tap & hold)</BlockTitle>
                    <BlockHeader>Pressing and holding one of its buttons increments or decrements the stepper’s value repeatedly. With dynamic autorepeat, the rate of change depends on how long the user continues pressing the control.</BlockHeader>
                    <Block strong className="text-align-center">
                      <Row>
                        <Col>
                          <small className="display-block">Default</small>
                          <Stepper value={0} min={0} max={100} step={1} autorepeat={true}></Stepper>
                        </Col>
                        <Col>
                          <small className="display-block">Dynamic</small>
                          <Stepper value={0} min={0} max={100} step={1} autorepeat={true} autorepeatDynamic={true}></Stepper>
                        </Col>
                      </Row>
                    </Block>

                    <BlockTitle>Wraps</BlockTitle>
                    <BlockHeader>In wraps mode incrementing beyond maximum value sets value to minimum value, likewise, decrementing below minimum value sets value to maximum value</BlockHeader>
                    <Block strong className="text-align-center">
                      <Row>
                        <Col>
                          <Stepper value={0} min={0} max={10} step={1} autorepeat={true} wraps={true}></Stepper>
                        </Col>
                      </Row>
                    </Block>

                    <BlockTitle>Custom value element</BlockTitle>
                    <List>
                      <ListItem title={`Apples ${this.state.applesCount}`}>
                        <Stepper buttonsOnly={true} small raised slot="after" onStepperChange={this.setApples.bind(this)}></Stepper>
                      </ListItem>
                      <ListItem title={`Oranges ${this.state.orangesCount}`}>
                        <Stepper buttonsOnly={true} small raised slot="after" onStepperChange={this.setOranges.bind(this)}></Stepper>
                      </ListItem>
                    </List>

                    <BlockTitle>Custom value format</BlockTitle>
                    <List>
                      <ListItem header="Meeting starts in" title={this.meetingTimeComputed}>
                        <Stepper
                          min={15}
                          max={240}
                          step={15}
                          value={this.state.meetingTime}
                          buttonsOnly={true}
                          small
                          slot="after"
                          onStepperChange={this.setMeetingTime.bind(this)}
                        ></Stepper>
                      </ListItem>
                    </List>

                    <BlockTitle>Manual input</BlockTitle>
                    <BlockHeader>It is possible to enter value manually from keyboard or mobile keypad. When click on input field, stepper enter into manual input mode, which allow type value from keyboar and check fractional part with defined accurancy. Click outside or enter Return key, ending manual mode.</BlockHeader>
                    <Block strong className="text-align-center">
                      <Row>
                        <Col>
                          <Stepper fill value={0} min={0} max={1000} step={1} autorepeat={true} wraps={true} manualInputMode={true} decimalPoint={2}></Stepper>
                        </Col>
                      </Row>
                    </Block>
                  </Page>
                );
              }
            }