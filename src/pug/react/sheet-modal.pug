extends ../_docs-template

block vars
  - var activeLink = 'react';
  - var title = 'Sheet Modal React Component | Framework7 React Documentation';

block content
  include ../_docs-demo-device

  .docs-nav
    include ../_docs-menu-react
  .docs-content
    +improveDocsLink
    h1 Sheet Modal React Component
    ul.docs-index
    p Sheet Modal is a special overlay type which is similar to Picker/Calendar's overlay. Such modal allows to create custom picker overlays with custom content.
    p Sheet Modal React component represents <a href="../docs/sheet-modal.html">Sheet Modal</a> component.
    h2 Sheet Modal Components
    p There are following components included:
    ul
      li <code><b>Sheet</b></code> / <code><b>F7Sheet</b></code> - sheet modal element
    h2 Sheet Modal Properties
    table.params-table
      thead
        tr
          th Prop
          th Type
          th Description
      tbody
        tr
          th(colspan="3") &lt;Sheet&gt; properties
        tr
          td backdrop
          td boolean
          td Enable to render additional sheet modal backdrop when required
        tr
          td opened
          td boolean
          td Allows to open/close Sheet Modal and set its initial state
        tr
          td closeByBackdropClick
          td boolean
          td true
          td When enabled, sheet will be closed on backdrop click. By default inherits same app parameter value
        tr
          td closeByOutsideClick
          td boolean
          td false
          td When enabled, sheet will be closed on when click outside of it. By default inherits same app parameter value
    h2 Sheet Modal Methods
    table.methods-table
      tr
        th(colspan="2") &lt;Sheet&gt; methods
      tr
        td .open(<span>animate</span>)
        td Open sheet modal
      tr
        td .close(<span>animate</span>)
        td Close sheet modal
    h2 Sheet Modal Events
    table.events-table
      thead
        tr
          th Event
          th Description
      tbody
        tr
          th(colspan="2") &lt;Sheet&gt; events
        tr
          td sheetOpen
          td Event will be triggered when Sheet Modal starts its opening animation
        tr
          td sheetOpened
          td Event will be triggered after Sheet Modal completes its opening animation
        tr
          td sheetClose
          td Event will be triggered when Sheet Modal starts its closing animation
        tr
          td sheetClosed
          td Event will be triggered after Sheet Modal completes its closing animation

    h2 Open And Close Sheet Modal
    p You can control Sheet Modal state, open and closing it:
    ul
      li using its <a href="../docs/sheet-modal.html">Sheet Modal API</a>
      li by passing <code>true</code> or <code>false</code> to its <code>opened</code> prop
      li by clicking on <a href="link.html">Link</a> or <a href="button.html">Button</a> with relevant <code>sheetOpen</code> property (to open it) and <code>sheetClose</code> property to close it

    h2 Access To Sheet Modal Instance
    p You can access Sheet Modal initialized instance by accessing <code><b>.f7Sheet</b></code> component's property.

    .with-device
      h2(data-device-preview="../docs-demos/react/sheet-modal.html") Examples
      :code(lang="jsx")
            export default class extends React.Component {
              constructor(props) {
                super(props);

                this.state = {
                  sheetOpened: false,
                };
              }
              render() {
                return (
                  <Page onPageBeforeOut={this.onPageBeforeOut.bind(this)} onPageBeforeRemove={this.onPageBeforeRemove.bind(this)}>
                    <Navbar title="Sheet Modal"></Navbar>

                    <Block>
                      <Row tag="p">
                        <Button className="col" raised sheetOpen=".demo-sheet">Open Sheet</Button>
                        <Button className="col" raised onClick={this.createSheet.bind(this)}>Create Dynamic Sheet</Button>
                      </Row>
                      <p>
                        <Button className="col" raised onClick={() => {this.setState({sheetOpened: true})}}>Open Via Prop Change</Button>
                      </p>
                    </Block>

                    <Sheet className="demo-sheet" opened={this.state.sheetOpened} onSheetClosed={() => {this.setState({sheetOpened: false})}}>
                      <Toolbar>
                        <div className="left"></div>
                        <div className="right">
                          <Link sheetClose>Close</Link>
                        </div>
                      </Toolbar>
                      {/*  Scrollable sheet content */}
                      <PageContent>
                        <Block>
                          <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quae ducimus dolorum ipsa aliquid accusamus perferendis laboriosam delectus numquam minima animi, libero illo in tempora harum sequi corporis alias ex adipisci.</p>
                          <p>Sunt magni enim saepe quasi aspernatur delectus consectetur fugiat necessitatibus qui sed, similique quis facere tempora, laudantium quae expedita ea, aperiam dolores. Aut deserunt soluta alias magnam. Consequatur, nisi, enim.</p>
                          <p>Eaque maiores ducimus, impedit unde culpa qui, explicabo accusamus, non vero corporis voluptatibus similique odit ab. Quaerat quasi consectetur quidem libero? Repudiandae adipisci vel voluptatum, autem libero minus dignissimos repellat.</p>
                          <p>Iusto, est corrupti! Totam minus voluptas natus esse possimus nobis, delectus veniam expedita sapiente ut cum reprehenderit aliquid odio amet praesentium vero temporibus obcaecati beatae aspernatur incidunt, perferendis voluptates doloribus?</p>
                          <p>Illum id laborum tempore, doloribus culpa labore ex iusto odit. Quibusdam consequuntur totam nam obcaecati, enim cumque nobis, accusamus, quos voluptates, voluptatibus sapiente repellendus nesciunt praesentium velit ipsa illo iusto.</p>
                        </Block>
                      </PageContent>
                    </Sheet>
                  </Page>
                );
              }
              createSheet() {
                const self = this;
                const $ = self.$$;
                // Create sheet modal
                if (!self.sheet) {
                  self.sheet = self.$f7.sheet.create({
                    content: `
                      <div class="sheet-modal">
                        <div class="toolbar">
                          <div class="toolbar-inner justify-content-flex-end">
                            <a href="#" class="link sheet-close">Close</a>
                          </div>
                        </div>
                        <div class="sheet-modal-inner">
                          <div class="page-content">
                            <div class="block">
                              <p>This sheet modal was created dynamically</p>
                              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse faucibus mauris leo, eu bibendum neque congue non. Ut leo mauris, eleifend eu commodo a, egestas ac urna. Maecenas in lacus faucibus, viverra ipsum pulvinar, molestie arcu. Etiam lacinia venenatis dignissim. Suspendisse non nisl semper tellus malesuada suscipit eu et eros. Nulla eu enim quis quam elementum vulputate. Mauris ornare consequat nunc viverra pellentesque. Aenean semper eu massa sit amet aliquam. Integer et neque sed libero mollis elementum at vitae ligula. Vestibulum pharetra sed libero sed porttitor. Suspendisse a faucibus lectus.</p>
                            </div>
                          </div>
                        </div>
                      </div>
                    `.trim(),
                  });
                }
                // Close inline sheet
                if ($('.demo-sheet.modal-in').length > 0) self.$f7.sheet.close('.demo-sheet');
                // Open it
                self.sheet.open();
              }
              onPageBeforeOut() {
                const self = this;
                // Close opened sheets on page out
                self.$f7.sheet.close();
              }
              onPageBeforeRemove() {
                const self = this;
                // Destroy sheet modal when page removed
                if (self.sheet) self.sheet.destroy();
              }
            };