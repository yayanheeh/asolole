extends ../_docs-template

block vars
  - var activeLink = 'react';
  - var title = 'Login Screen React Component | Framework7 React Documentation';

block content
  include ../_docs-demo-device

  .docs-nav
    include ../_docs-menu-react
  .docs-content
    +improveDocsLink
    h1 Login Screen React Component
    ul.docs-index
    p Login Screen React component represents <a href="../docs/login-screen.html">Login Screen</a> component.
    h2 Login Screen Components
    p There are following components included:
    ul
      li <code><b>LoginScreen</b></code> / <code><b>F7LoginScreen</b></code> - login screen element
      li <code><b>LoginScreenTitle</b></code> / <code><b>F7LoginScreenTitle</b></code> - login screen title element
    h2 Login Screen Properties
    table.params-table
      thead
        tr
          th Prop
          th Type
          th Default
          th Description
      tbody
        tr
          th(colspan="4") &lt;LoginScreen&gt; properties
        tr
          td opened
          td boolean
          td false
          td Allows to open/close Login Screen and set its initial state
    h2 Login Screen Methods
    table.methods-table
      tr
        th(colspan="2") &lt;LoginScreen&gt; methods
      tr
        td .open(<span>animate</span>)
        td Open login screen
      tr
        td .close(<span>animate</span>)
        td Close login screen
    h2 Login Screen Events
    table.events-table
      thead
        tr
          th Event
          th Description
      tbody
        tr
          th(colspan="2") &lt;LoginScreen&gt; events
        tr
          td loginScreenOpen
          td Event will be triggered when Login Screen starts its opening animation
        tr
          td loginScreenOpened
          td Event will be triggered after Login Screen completes its opening animation
        tr
          td loginScreenClose
          td Event will be triggered when Login Screen starts its closing animation
        tr
          td loginScreenClosed
          td Event will be triggered after Login Screen completes its closing animation
    h2 Open And Close Login Screen
    p In addition to Login Screen open()/close() methods, you can open and close it:
    ul
      li using <a href="../docs/login-screen.html">Login Screen API</a>
      li by passing <code>true</code> or <code>false</code> to its <code>opened</code> prop
      li by clicking on <a href="link.html">Link</a> or <a href="button.html">Button</a> with relevant <code>loginScreenOpen</code> property (to open it) and <code>loginScreenClose</code> property to close it
    h2 Access To Login Screen Instance
    p You can access Login Screen initialized instance by accessing <code><b>.f7LoginScreen</b></code> component's property.
    .with-device
      h2(data-device-preview="../docs-demos/react/login-screen.html") Examples
      :code(lang="jsx")
            export default class extends React.Component {
              constructor(props) {
                super(props);

                this.state = {
                  loginScreenOpened: false,
                  username: '',
                  password: '',
                };
              }
              render() {
                return (
                  <Page>
                    <Navbar title="Login Screen"></Navbar>
                    <Block>
                      <p>Framework7 comes with ready to use Login Screen layout. It could be used inside of page or inside of popup (Embedded) or as a standalone overlay:</p>
                    </Block>

                    <List>
                      <ListItem link="/login-screen-page/" title="As Separate Page"></ListItem>
                    </List>

                    <Block>
                      <Button raised big fill loginScreenOpen=".demo-login-screen">As Overlay</Button>
                    </Block>

                    <Block>
                      <Button raised big fill onClick={() => {this.setState({loginScreenOpened : true})}}>Open Via Prop Change</Button>
                    </Block>

                    <LoginScreen className="demo-login-screen" opened={this.state.loginScreenOpened} onLoginScreenClosed={() => {this.setState({loginScreenOpened : false})}}>
                      <Page loginScreen>
                        <LoginScreenTitle>Framework7</LoginScreenTitle>
                        <List form>
                          <ListItem>
                            <Label>Username</Label>
                            <Input type="text" placeholder="Your username" onInput={(e) => {
                              this.setState({ username: e.target.value});
                            }}></Input>
                          </ListItem>
                          <ListItem>
                            <Label>Password</Label>
                            <Input type="password" placeholder="Your password" onInput={(e) => {
                              this.setState({ password: e.target.value});
                            }}></Input>
                          </ListItem>
                        </List>
                        <List>
                          <ListButton onClick={this.signIn.bind(this)}>Sign In</ListButton>
                          <BlockFooter>Some text about login information.<br />Lorem ipsum dolor sit amet, consectetur adipiscing elit.</BlockFooter>
                        </List>
                      </Page>
                    </LoginScreen>
                  </Page>
                )
              }
              signIn() {
                const self = this;
                const app = self.$f7;

                app.dialog.alert(`Username: ${self.state.username}<br>Password: ${self.state.password}`, () => {
                  app.loginScreen.close();
                });
              }
            };
      h4 Separate Login Screen Page
      :code(lang="jsx")
            export default class extends React.Component {
              constructor(props) {
                super(props);

                this.state = {
                  username: '',
                  password: '',
                };
              }

              render() {
                return (
                  <Page noToolbar noNavbar noSwipeback loginScreen>
                    <LoginScreenTitle>Framework7</LoginScreenTitle>
                    <List form>
                      <ListItem>
                        <Label>Username</Label>
                        <Input type="text" placeholder="Your username" onInput={(e) => {
                          this.setState({ username: e.target.value});
                        }}></Input>
                      </ListItem>
                      <ListItem>
                        <Label>Password</Label>
                        <Input type="password" placeholder="Your password" onInput={(e) => {
                          this.setState({ password: e.target.value});
                        }}></Input>
                      </ListItem>
                    </List>
                    <List>
                      <ListButton onClick={this.signIn.bind(this)}>Sign In</ListButton>
                      <BlockFooter>Some text about login information.<br />Lorem ipsum dolor sit amet, consectetur adipiscing elit.</BlockFooter>
                    </List>
                  </Page>
                )
              }
              signIn() {
                const self = this;
                const app = self.$f7;
                const router = self.$f7router;
                app.dialog.alert(`Username: ${self.state.username}<br>Password: ${self.state.password}`, () => {
                  router.back();
                });
              }
            }


