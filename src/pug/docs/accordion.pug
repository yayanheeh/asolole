extends ../_docs-template

block vars
  - var title = 'Accordion | Framework7 Documentation';

block content
  include ../_docs-demo-device

  .docs-nav
    include ../_docs-menu
  .docs-content
    +improveDocsLink
    h1 Accordion / Collapsible
    ul.docs-index
    h2 Accordion Layout
    p Common Accordion layout could be treat as the following:
    :code(lang="html")
          &lt;div class="accordion-list"&gt;
              &lt;div class="accordion-item"&gt;
                  &lt;div class="accordion-item-toggle"&gt;...&lt;/div&gt;
                  &lt;div class="accordion-item-content"&gt;...&lt;/div&gt;
              &lt;/div&gt;
              &lt;div class="accordion-item accordion-item-opened"&gt;
                  &lt;div class="accordion-item-toggle"&gt;...&lt;/div&gt;
                  &lt;div class="accordion-item-content"&gt;...&lt;/div&gt;
              &lt;/div&gt;
              &lt;div class="accordion-item"&gt;
                  &lt;div class="accordion-item-toggle"&gt;...&lt;/div&gt;
                  &lt;div class="accordion-item-content"&gt;...&lt;/div&gt;
              &lt;/div&gt;
              ...
          &lt;/div&gt;
    p Where
    ul
      li <code>accordion-list</code> - list of accordion items set. Optional class
        ul
          li <code>accordion-item</code> - single accordion item. Required
            ul
              li <code>accordion-item-toggle</code> - link to expand/collapse accordion item content. Required
              li <code>accordion-item-content</code> - hidden accordion item content. Required
          li <code>accordion-item-opened</code> - single opened accordion item
    h2 Collapsible Layout
    p If you want to use single separate collapsible element you may just omit "accordion-list" wrapper element:
    :code(lang="html")
          &lt;!-- Single collapsible element --&gt;
          &lt;div class="accordion-item"&gt;
              &lt;div class="accordion-item-toggle"&gt;...&lt;/div&gt;
              &lt;div class="accordion-item-content"&gt;...&lt;/div&gt;
          &lt;/div&gt;

          &lt;!-- Another separate collapsible element --&gt;
          &lt;div class="accordion-item"&gt;
              &lt;div class="accordion-item-toggle"&gt;...&lt;/div&gt;
              &lt;div class="accordion-item-content"&gt;...&lt;/div&gt;
          &lt;/div&gt;
    h2 Accordion List View
    p If you use list view as accordion you may use "item-link" element instead of "accordion-toggle":
    :code(lang="html")
          &lt;div class="list accordion-list"&gt;
              &lt;ul&gt;
                  &lt;li class="accordion-item"&gt;
                      &lt;a href="" class="item-link item-content"&gt;
                          &lt;div class="item-inner"&gt;
                              &lt;div class="item-title"&gt;Item 1&lt;/div&gt;
                          &lt;/div&gt;
                      &lt;/a&gt;
                      &lt;div class="accordion-item-content"&gt;Item 1 content ...&lt;/div&gt;
                  &lt;/li&gt;
                  &lt;li class="accordion-item"&gt;
                      &lt;a href="" class="item-link item-content"&gt;
                          &lt;div class="item-inner"&gt;
                              &lt;div class="item-title"&gt;Item 2&lt;/div&gt;
                          &lt;/div&gt;
                      &lt;/a&gt;
                      &lt;div class="accordion-item-content"&gt;Item 2 content ...&lt;/div&gt;
                  &lt;/li&gt;
              &lt;/ul&gt;
          &lt;/div&gt;
    .with-device
      h2(data-device-preview="../docs-demos/core/accordion.html") Example
      :code(lang="html")
            &lt;!-- List View --&gt;
            &lt;div class="block-title"&gt;List View Accordion&lt;/div&gt;
            &lt;div class="list accordion-list"&gt;
              &lt;ul&gt;
                &lt;li class="accordion-item"&gt;&lt;a href="#" class="item-content item-link"&gt;
                    &lt;div class="item-inner"&gt;
                      &lt;div class="item-title"&gt;Item 1&lt;/div&gt;
                    &lt;/div&gt;&lt;/a&gt;
                  &lt;div class="accordion-item-content"&gt;
                    &lt;div class="block"&gt;
                      &lt;p&gt;Item 1 content. Lorem ipsum dolor sit amet...&lt;/p&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/li&gt;
                &lt;li class="accordion-item"&gt;&lt;a href="#" class="item-content item-link"&gt;
                    &lt;div class="item-inner"&gt;
                      &lt;div class="item-title"&gt;Item 2&lt;/div&gt;
                    &lt;/div&gt;&lt;/a&gt;
                  &lt;div class="accordion-item-content"&gt;
                    &lt;div class="block"&gt;
                      &lt;p&gt;Item 2 content. Lorem ipsum dolor sit amet...&lt;/p&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/li&gt;
                ...
              &lt;/ul&gt;
            &lt;/div&gt;
                        &lt;!-- Separate collapsibles - omit "accordion-list" class--&gt;
            &lt;div class="block-title"&gt;Separate Collapsibles&lt;/div&gt;
            &lt;div class="list"&gt;
              &lt;ul&gt;
                &lt;li class="accordion-item"&gt;&lt;a href="#" class="item-content item-link"&gt;
                    &lt;div class="item-inner"&gt;
                      &lt;div class="item-title"&gt;Item 1&lt;/div&gt;
                    &lt;/div&gt;&lt;/a&gt;
                  &lt;div class="accordion-item-content"&gt;
                    &lt;div class="block"&gt;
                      &lt;p&gt;Item 1 content. Lorem ipsum dolor sit amet...&lt;/p&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/li&gt;
                &lt;li class="accordion-item"&gt;&lt;a href="#" class="item-content item-link"&gt;
                    &lt;div class="item-inner"&gt;
                      &lt;div class="item-title"&gt;Item 2&lt;/div&gt;
                    &lt;/div&gt;&lt;/a&gt;
                  &lt;div class="accordion-item-content"&gt;
                    &lt;div class="block"&gt;
                      &lt;p&gt;Item 2 content. Lorem ipsum dolor sit amet...&lt;/p&gt;
                    &lt;/div&gt;
                  &lt;/div&gt;
                &lt;/li&gt;
                ...
              &lt;/ul&gt;
            &lt;/div&gt;
                        &lt;!-- Custom Accordion --&gt;
            &lt;div class="block-title"&gt;Custom Accordion&lt;/div&gt;
            &lt;div class="block accordion-list custom-accordion"&gt;
              &lt;div class="accordion-item"&gt;
                &lt;div class="accordion-item-toggle"&gt;
                  &lt;i class="icon icon-plus"&gt;+&lt;/i&gt;
                  &lt;i class="icon icon-minus"&gt;-&lt;/i&gt;
                  &lt;span&gt;Item 1&lt;/span&gt;
                &lt;/div&gt;
                &lt;div class="accordion-item-content"&gt;
                  &lt;p&gt;Item 1 content. Lorem ipsum dolor sit amet...&lt;/p&gt;
                &lt;/div&gt;
              &lt;/div&gt;
              &lt;div class="accordion-item"&gt;
                &lt;div class="accordion-item-toggle"&gt;
                  &lt;i class="icon icon-plus"&gt;+&lt;/i&gt;
                  &lt;i class="icon icon-minus"&gt;-&lt;/i&gt;
                  &lt;span&gt;Item 2&lt;/span&gt;
                &lt;/div&gt;
                &lt;div class="accordion-item-content"&gt;
                  &lt;p&gt;Item 2 content. Lorem ipsum dolor sit amet...&lt;/p&gt;
                &lt;/div&gt;
              &lt;/div&gt;
              ...
            &lt;/div&gt;

    h2 Accordion App Methods
    p Accordion also has a JavaScript API that allows you to open and close them programmatically. Lets look at some Accordion App methods:
    .method-wrap
      p
        span.method app.accordion.open(<span>el</span>)</span> - open specified accordion item
      ul.method-parameters
        li
          span.parameter item
          |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> (with CSS Selector) of accordion-item element (&lt;div class="accordion-item"&gt;). Required

    .method-wrap
      p
        span.method app.accordion.close(<span>el</span>)</span> - close specified accordion item
      ul.method-parameters
        li
          span.parameter item
          |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> (with CSS Selector) of accordion-item element (&lt;div class="accordion-item"&gt;). Required

    .method-wrap
      p
        span.method app.accordion.toggle(<span>el</span>)</span> - toggle specified accordion item
      ul.method-parameters
        li
          span.parameter item
          |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> (with CSS Selector) of accordion-item element (&lt;div class="accordion-item"&gt;). Required

    h2 Accordion Events
    p Accordion will fire the following DOM events on accordion items and app events on app instance:
    h3 DOM Events
    table.events-table
      thead
        tr
          th Event
          th Target
          th Description
      tbody
        tr
          td accordion:open
          td Accordion item<span>&lt;div class="accordion-item"&gt;</span>
          td Event will be triggered when accordion content starts its opening animation
        tr
          td accordion:opened
          td Accordion item<span>&lt;div class="accordion-item"&gt;</span>
          td Event will be triggered after accordion content completes its opening animation
        tr
          td accordion:close
          td Accordion item<span>&lt;div class="accordion-item"&gt;</span>
          td Event will be triggered when accordion content starts its closing animation
        tr
          td accordion:closed
          td Accordion item<span>&lt;div class="accordion-item"&gt;</span>
          td Event will be triggered after accordion content completes its closing animation

    h3 App Events
    table.events-table
      thead
        tr
          th Event
          th Arguments
          th Description
      tbody
        tr
          td accordionOpen
          td <span>(el)</span>
          td Event will be triggered when accordion content starts its opening animation
        tr
          td accordionOpened
          td <span>(el)</span>
          td Event will be triggered after accordion content completes its opening animation
        tr
          td accordionClose
          td <span>(el)</span>
          td Event will be triggered when accordion content starts its closing animation
        tr
          td accordionClosed
          td <span>(el)</span>
          td Event will be triggered after accordion content completes its closing animation
    :code(lang="js")
          var app = new Framework7();

          var $ = Dom7;

          $('.accordion-item').on('accordion:opened', function () {
           app.dialog.alert('Accordion item opened');
          });

          $('.accordion-item').on('accordion:closed', function (e) {
           app.dialog.alert('Accordion item closed');
          });

          app.on('accordionOpened', function (el) {
            console.log('The following element opened:');
            console.log(el);
          });
